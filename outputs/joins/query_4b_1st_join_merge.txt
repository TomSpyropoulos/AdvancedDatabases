== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- SortMergeJoin [DR_NO#46], [DR_NO#381], Inner
   :- Sort [DR_NO#46 ASC NULLS FIRST], false, 0
   :  +- Exchange hashpartitioning(DR_NO#46, 200), ENSURE_REQUIREMENTS, [plan_id=142]
   :     +- Union
   :        :- Project [DR_NO#46, Date Rptd#47, DATE OCC#48, TIME OCC#49, AREA #50, AREA NAME#51, Rpt Dist No#52, Part 1-2#53, Crm Cd#54, Crm Cd Desc#55, Mocodes#56, Vict Age#57, Vict Sex#58, Vict Descent#59, Premis Cd#60, Premis Desc#61, Weapon Used Cd#62, Weapon Desc#63, Status#64, Status Desc#65, Crm Cd 1#66, Crm Cd 2#67, Crm Cd 3#68, Crm Cd 4#69, ... 6 more fields]
   :        :  +- Project [DR_NO#46, Date Rptd#47, DATE OCC#48, TIME OCC#49, AREA #50, AREA NAME#51, Rpt Dist No#52, Part 1-2#53, Crm Cd#54, Crm Cd Desc#55, Mocodes#56, Vict Age#57, Vict Sex#58, Vict Descent#59, Premis Cd#60, Premis Desc#61, Weapon Used Cd#62, Weapon Desc#63, Status#64, Status Desc#65, Crm Cd 1#66, Crm Cd 2#67, Crm Cd 3#68, Crm Cd 4#69, ... 5 more fields]
   :        :     +- Filter (((((((isnotnull(LAT#72) AND isnotnull(LON#73)) AND isnotnull(Weapon Used Cd#62)) AND isnotnull(year(cast(from_unixtime(unix_timestamp(Date Rptd#47, M/d/yyyy hh:mm:ss a, Some(Etc/UTC), false), yyyy-MM-dd HH:mm:ss, Some(Etc/UTC)) as date)))) AND NOT (LAT#72 = 0.0)) AND NOT (LON#73 = 0.0)) AND StartsWith(cast(Weapon Used Cd#62 as string), 1)) AND isnotnull(DR_NO#46))
   :        :        +- FileScan csv [DR_NO#46,Date Rptd#47,DATE OCC#48,TIME OCC#49,AREA #50,AREA NAME#51,Rpt Dist No#52,Part 1-2#53,Crm Cd#54,Crm Cd Desc#55,Mocodes#56,Vict Age#57,Vict Sex#58,Vict Descent#59,Premis Cd#60,Premis Desc#61,Weapon Used Cd#62,Weapon Desc#63,Status#64,Status Desc#65,Crm Cd 1#66,Crm Cd 2#67,Crm Cd 3#68,Crm Cd 4#69,... 4 more fields] Batched: false, DataFilters: [isnotnull(LAT#72), isnotnull(LON#73), isnotnull(Weapon Used Cd#62), isnotnull(year(cast(from_uni..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://vm-master:54310/datasets/Crime_Data_from_2010_to_2019.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(Weapon Used Cd), Not(EqualTo(LAT,0.0)), Not(EqualTo(LO..., ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA :int,AREA NAME:string,Rpt Dis...
   :        +- Project [DR_NO#119, Date Rptd#120, DATE OCC#121, TIME OCC#122, AREA#123, AREA NAME#124, Rpt Dist No#125, Part 1-2#126, Crm Cd#127, Crm Cd Desc#128, Mocodes#129, Vict Age#130, Vict Sex#131, Vict Descent#132, Premis Cd#133, Premis Desc#134, Weapon Used Cd#135, Weapon Desc#136, Status#137, Status Desc#138, Crm Cd 1#139, Crm Cd 2#140, Crm Cd 3#141, Crm Cd 4#142, ... 6 more fields]
   :           +- Project [DR_NO#119, Date Rptd#120, DATE OCC#121, TIME OCC#122, AREA#123, AREA NAME#124, Rpt Dist No#125, Part 1-2#126, Crm Cd#127, Crm Cd Desc#128, Mocodes#129, Vict Age#130, Vict Sex#131, Vict Descent#132, Premis Cd#133, Premis Desc#134, Weapon Used Cd#135, Weapon Desc#136, Status#137, Status Desc#138, Crm Cd 1#139, Crm Cd 2#140, Crm Cd 3#141, Crm Cd 4#142, ... 5 more fields]
   :              +- Filter (((((((isnotnull(LAT#145) AND isnotnull(LON#146)) AND isnotnull(Weapon Used Cd#135)) AND isnotnull(year(cast(from_unixtime(unix_timestamp(Date Rptd#120, M/d/yyyy hh:mm:ss a, Some(Etc/UTC), false), yyyy-MM-dd HH:mm:ss, Some(Etc/UTC)) as date)))) AND NOT (LAT#145 = 0.0)) AND NOT (LON#146 = 0.0)) AND StartsWith(cast(Weapon Used Cd#135 as string), 1)) AND isnotnull(DR_NO#119))
   :                 +- FileScan csv [DR_NO#119,Date Rptd#120,DATE OCC#121,TIME OCC#122,AREA#123,AREA NAME#124,Rpt Dist No#125,Part 1-2#126,Crm Cd#127,Crm Cd Desc#128,Mocodes#129,Vict Age#130,Vict Sex#131,Vict Descent#132,Premis Cd#133,Premis Desc#134,Weapon Used Cd#135,Weapon Desc#136,Status#137,Status Desc#138,Crm Cd 1#139,Crm Cd 2#140,Crm Cd 3#141,Crm Cd 4#142,... 4 more fields] Batched: false, DataFilters: [isnotnull(LAT#145), isnotnull(LON#146), isnotnull(Weapon Used Cd#135), isnotnull(year(cast(from_..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://vm-master:54310/datasets/Crime_Data_from_2020_to_Present.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(Weapon Used Cd), Not(EqualTo(LAT,0.0)), Not(EqualTo(LO..., ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA:int,AREA NAME:string,Rpt Dist...
   +- Sort [DR_NO#381 ASC NULLS FIRST], false, 0
      +- HashAggregate(keys=[DR_NO#381], functions=[min(distance#301)])
         +- Exchange hashpartitioning(DR_NO#381, 200), ENSURE_REQUIREMENTS, [plan_id=138]
            +- HashAggregate(keys=[DR_NO#381], functions=[partial_min(distance#301)])
               +- Project [DR_NO#381, pythonUDF0#504 AS distance#301]
                  +- BatchEvalPython [calculate_distance(LAT#407, LON#408, Y#18, X#17)#300], [pythonUDF0#504]
                     +- BroadcastNestedLoopJoin BuildRight, Cross
                        :- Union
                        :  :- Project [DR_NO#381, LAT#407, LON#408]
                        :  :  +- Filter (((((((isnotnull(LAT#407) AND isnotnull(LON#408)) AND isnotnull(Weapon Used Cd#397)) AND isnotnull(year(cast(from_unixtime(unix_timestamp(Date Rptd#382, M/d/yyyy hh:mm:ss a, Some(Etc/UTC), false), yyyy-MM-dd HH:mm:ss, Some(Etc/UTC)) as date)))) AND NOT (LAT#407 = 0.0)) AND NOT (LON#408 = 0.0)) AND StartsWith(cast(Weapon Used Cd#397 as string), 1)) AND isnotnull(DR_NO#381))
                        :  :     +- FileScan csv [DR_NO#381,Date Rptd#382,Weapon Used Cd#397,LAT#407,LON#408] Batched: false, DataFilters: [isnotnull(LAT#407), isnotnull(LON#408), isnotnull(Weapon Used Cd#397), isnotnull(year(cast(from_..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://vm-master:54310/datasets/Crime_Data_from_2010_to_2019.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(Weapon Used Cd), Not(EqualTo(LAT,0.0)), Not(EqualTo(LO..., ReadSchema: struct<DR_NO:int,Date Rptd:string,Weapon Used Cd:int,LAT:double,LON:double>
                        :  +- Project [DR_NO#409, LAT#435, LON#436]
                        :     +- Filter (((((((isnotnull(LAT#435) AND isnotnull(LON#436)) AND isnotnull(Weapon Used Cd#425)) AND isnotnull(year(cast(from_unixtime(unix_timestamp(Date Rptd#410, M/d/yyyy hh:mm:ss a, Some(Etc/UTC), false), yyyy-MM-dd HH:mm:ss, Some(Etc/UTC)) as date)))) AND NOT (LAT#435 = 0.0)) AND NOT (LON#436 = 0.0)) AND StartsWith(cast(Weapon Used Cd#425 as string), 1)) AND isnotnull(DR_NO#409))
                        :        +- FileScan csv [DR_NO#409,Date Rptd#410,Weapon Used Cd#425,LAT#435,LON#436] Batched: false, DataFilters: [isnotnull(LAT#435), isnotnull(LON#436), isnotnull(Weapon Used Cd#425), isnotnull(year(cast(from_..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://vm-master:54310/datasets/Crime_Data_from_2020_to_Present.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(Weapon Used Cd), Not(EqualTo(LAT,0.0)), Not(EqualTo(LO..., ReadSchema: struct<DR_NO:int,Date Rptd:string,Weapon Used Cd:int,LAT:double,LON:double>
                        +- BroadcastExchange IdentityBroadcastMode, [plan_id=132]
                           +- FileScan csv [X#17,Y#18] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://vm-master:54310/datasets/LAPD_Police_Stations.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<X:double,Y:double>


